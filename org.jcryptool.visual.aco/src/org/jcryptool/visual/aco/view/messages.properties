Func_allSteps=All steps with one click
Func_alpha=Alpha:
Func_analyseCreated=Analyze a created ciphertext
Func_analyseGiven=Analyze a given ciphertext
Func_analysis=Insert ciphertext
Func_animation=Animation
Func_antAnalysis=Ant controller
Func_analysisType=Level of detail
Func_beta=Beta:
Func_cycle=Until last knot
Func_doWithNewAnt=Start new trail
Func_encryption=Generate ciphertext
Func_possibleInputs=Text input possibilities
Func_textLanguage=Language of inserted text
Func_error=Error while loading the ACO Plug-in\!
Func_evap=Evaporation:
Func_initial_plaintext=This is the correct text
Func_keyLength=Key length:
Func_newAnt=Place new ant
Func_permutation=Permutation:
Func_plaintext=Plaintext:
Func_ciphertext=Ciphertext:
Func_general=General
Func_keytext=Key:
Func_oneStep=Step by step
Func_proceed=Proceed
Func_proceedToAnalysis=Start analysis
Func_reset=Reset
Func_settings=Algorithm Settings
Func_analyseConfiguration=Configuration
Func_analyseGroupLabel=Analysis
Func_step=Step
Info_description1=This tutorial illustrates the cryptanalysis of a permutation cipher based on an ant colony optimization algorithm (ACO). In this first part of the tutorial the encryption process is demonstrated.\nThe visualization as graph at the analysis section limits the available key sizes to 3, 4 and 5. Additionally, your text is filled with random characters to match the key size.\nHere the plaintext is written in a matrix. Thereby the key length determines the number of columns of the matrix. Incomplete columns will be filled up with random letters.\nThe cipher text is produced by reading out the columns in the order determined by the permutation. With the aid of the elements on the left side the components of the encryption process can be modified.
Info_description2=Now we move on to the cryptanalysis. Based on the key length first the columns of the encryption matrix are reconstructed. Herefrom a graph is build where every knot corresponds to a column of the matrix.\nThe key length can be investigated by statistical tests. In contrast to that the determination of the right order of the columns is the difficult part of the cryptanalysis. This is where the ACO comes into play. At first an ant is placed randomly on one knot of the graph.
Info_description3=Every trail through the graph including every knot exactly one time corresponds to a possible decryption as one may reconstruct the encryption matrix by concatenating the columns in the order the corresponding knots were passed in the trail and then read out the plaintext line by line.\nThe probability with which an ant chooses a certain not yet passed knot to be the next one in the trail depends on two measures. First the bigrams that occur by concatenating the last column with the possible next columns are examined and compared to ordinary bigrams that occur in texts of natural languages.\nE.g. if an ant is located at a column starting with a Q a column starting with a U gets a higher probability to be the next in the trail than one starting with a X since the combination QU is much more frequent in natural languages than the combination QX.\nIn addition to that certain values are assigned to all edges of the graph. These values are all equal at the beginning and change after an ant has finished its trail through the graph. Based on the analogy to real ants these values are called pheromone values.\nBy using the Sliders Alpha (pheromone) and Beta (bigrams) one can determine the influence the two measures should have on the choice of the ant.
Info_description4=As soon as an ant has finished its trail through the graph the resulting solution will be evaluated. Therefore the derived plaintext is compared to a wordlist containing common words of a natural language (English in this case) with at least three letters. The length of the words found in the possible decryption are squared, summed up and divided by the length of the text.\nThe resulting value is added to the pheromone values that correspond to the edges that build up the trail which led to the decryption. Apart from that a reduction of all pheromone values takes place. This corresponds to a evaporation process in the natural role model. This parameter can also be modified by a slider on the left side of the tutorial. In order to observe how the pheromone values develop over several iterations of the algorithm one can now send out more ants.
Show_decryptedBestKnown=Best known decryption:
Show_decryptedByAnt1=Ant no
Show_decryptedByAnt2=decrypts text to:
Show_encryptedText=Encrypted text:
Show_encryptionKey=The key found is the decryption key\nThe corresponding encryption key would be:
Show_permutationMatrix=Permutationmatrix
Show_pheromoneMatrix=Pheromone matrix
Show_wrongInputTextSize = The ciphertext has to be dividable by the length of the key.
Description_title=Description
Description_tooltip=Further information
Func_radioCompleteRound=Complete cycle at once
Control_language1=English
Control_language2 = German
Control_language1_short = en
Control_language2_short = de
Analysis_multipleCycles = Number of iterations